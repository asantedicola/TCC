{"ast":null,"code":"var _s = $RefreshSig$();\nimport { aggregate, createDirectus, readItems, rest } from \"@directus/sdk\";\nimport { useState } from \"react\";\nimport client from \"./api\";\nconst PAGE_SIZE = 10;\nasync function fetchItems(collection, filter, page) {\n  const offset = (page - 1) * PAGE_SIZE;\n  return await client.request(readItems(collection, {\n    limit: PAGE_SIZE,\n    offset,\n    filter,\n    fields: [\"*\", \"instituicao_id.*\", \"instituicao_id.id_usuario.*\"]\n  }));\n}\nasync function countItems(collection, filter) {\n  return await client.request(aggregate(collection, {\n    aggregate: {\n      count: \"*\"\n    },\n    query: {\n      filter\n    }\n  }));\n}\nconst useApi = () => {\n  _s();\n  const [servicos, setServicos] = useState([]);\n  const [servicosTotal, setServicosTotal] = useState(0);\n  return {\n    pageSize: PAGE_SIZE,\n    getServicos: async (query, page) => {\n      var _await$countItems, _await$countItems$;\n      let filter = {};\n      if (typeof query === 'string' && query.trim()) {\n        filter = {\n          _or: [{\n            titulo: {\n              _contains: query\n            }\n          }, {\n            descricao: {\n              _contains: query\n            }\n          }]\n        };\n      } else if (typeof query === 'object' && query) {\n        filter = {\n          _and: [query]\n        };\n      }\n      setServicosTotal((_await$countItems = await countItems(\"Servico\", filter)) === null || _await$countItems === void 0 ? void 0 : (_await$countItems$ = _await$countItems[0]) === null || _await$countItems$ === void 0 ? void 0 : _await$countItems$.count);\n      setServicos(await fetchItems(\"Servico\", filter, page));\n    },\n    servicos,\n    servicosTotal,\n    servicosTotalPages: Math.ceil(servicosTotal / PAGE_SIZE)\n  };\n};\n_s(useApi, \"McLP5WgrlAF2fdMHHDme3P+47MM=\");\nexport default useApi;","map":{"version":3,"names":["aggregate","createDirectus","readItems","rest","useState","client","PAGE_SIZE","fetchItems","collection","filter","page","offset","request","limit","fields","countItems","count","query","useApi","_s","servicos","setServicos","servicosTotal","setServicosTotal","pageSize","getServicos","_await$countItems","_await$countItems$","trim","_or","titulo","_contains","descricao","_and","servicosTotalPages","Math","ceil"],"sources":["C:/Users/Anderson/Desktop/TestesTCC/TCC/tcc-frontend/src/api/apiServicos.js"],"sourcesContent":["import {aggregate, createDirectus, readItems, rest} from \"@directus/sdk\";\r\nimport {useState} from \"react\";\r\nimport client from \"./api\";\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\nasync function fetchItems(collection, filter, page) {\r\n   const offset = (page - 1) * PAGE_SIZE;\r\n   return await client.request(readItems(collection, {\r\n      limit: PAGE_SIZE,\r\n      offset,\r\n      filter,\r\n      fields:[\"*\",\"instituicao_id.*\",\"instituicao_id.id_usuario.*\"]\r\n   }));\r\n\r\n}\r\n\r\nasync function countItems(collection, filter) {\r\n   return await client.request(aggregate(collection, {\r\n      aggregate: {count: \"*\"},\r\n      query: {\r\n         filter\r\n      }\r\n   }));\r\n\r\n}\r\n\r\nconst useApi = () => {\r\n\r\n   const [servicos, setServicos] = useState([]);\r\n   const [servicosTotal, setServicosTotal] = useState(0);\r\n\r\n   return {\r\n      pageSize: PAGE_SIZE,\r\n      getServicos: async (query, page) => {\r\n         let filter = {};\r\n         if(typeof query === 'string' && query.trim()){\r\n            filter = {\r\n               _or: [{\r\n                  titulo: {\r\n                     _contains: query\r\n                  },\r\n               }, {\r\n                  descricao: {\r\n                     _contains: query\r\n                  }\r\n               }]\r\n            }\r\n         }   \r\n         else if (typeof query === 'object' && query)  {\r\n            filter = { _and: [query]}\r\n         }\r\n         setServicosTotal((await countItems(\"Servico\", filter))?.[0]?.count)\r\n         setServicos(await fetchItems(\"Servico\", filter, page));\r\n      },\r\n      servicos,\r\n      servicosTotal,\r\n      servicosTotalPages: Math.ceil(servicosTotal / PAGE_SIZE)\r\n   }\r\n\r\n}\r\n\r\nexport default useApi;\r\n"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,cAAc,EAAEC,SAAS,EAAEC,IAAI,QAAO,eAAe;AACxE,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,MAAM,MAAM,OAAO;AAE1B,MAAMC,SAAS,GAAG,EAAE;AAEpB,eAAeC,UAAUA,CAACC,UAAU,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACjD,MAAMC,MAAM,GAAG,CAACD,IAAI,GAAG,CAAC,IAAIJ,SAAS;EACrC,OAAO,MAAMD,MAAM,CAACO,OAAO,CAACV,SAAS,CAACM,UAAU,EAAE;IAC/CK,KAAK,EAAEP,SAAS;IAChBK,MAAM;IACNF,MAAM;IACNK,MAAM,EAAC,CAAC,GAAG,EAAC,kBAAkB,EAAC,6BAA6B;EAC/D,CAAC,CAAC,CAAC;AAEN;AAEA,eAAeC,UAAUA,CAACP,UAAU,EAAEC,MAAM,EAAE;EAC3C,OAAO,MAAMJ,MAAM,CAACO,OAAO,CAACZ,SAAS,CAACQ,UAAU,EAAE;IAC/CR,SAAS,EAAE;MAACgB,KAAK,EAAE;IAAG,CAAC;IACvBC,KAAK,EAAE;MACJR;IACH;EACH,CAAC,CAAC,CAAC;AAEN;AAEA,MAAMS,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAElB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAErD,OAAO;IACJoB,QAAQ,EAAElB,SAAS;IACnBmB,WAAW,EAAE,MAAAA,CAAOR,KAAK,EAAEP,IAAI,KAAK;MAAA,IAAAgB,iBAAA,EAAAC,kBAAA;MACjC,IAAIlB,MAAM,GAAG,CAAC,CAAC;MACf,IAAG,OAAOQ,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACW,IAAI,CAAC,CAAC,EAAC;QAC1CnB,MAAM,GAAG;UACNoB,GAAG,EAAE,CAAC;YACHC,MAAM,EAAE;cACLC,SAAS,EAAEd;YACd;UACH,CAAC,EAAE;YACAe,SAAS,EAAE;cACRD,SAAS,EAAEd;YACd;UACH,CAAC;QACJ,CAAC;MACJ,CAAC,MACI,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,EAAG;QAC3CR,MAAM,GAAG;UAAEwB,IAAI,EAAE,CAAChB,KAAK;QAAC,CAAC;MAC5B;MACAM,gBAAgB,EAAAG,iBAAA,GAAE,MAAMX,UAAU,CAAC,SAAS,EAAEN,MAAM,CAAC,cAAAiB,iBAAA,wBAAAC,kBAAA,GAApCD,iBAAA,CAAwC,CAAC,CAAC,cAAAC,kBAAA,uBAA1CA,kBAAA,CAA4CX,KAAK,CAAC;MACnEK,WAAW,CAAC,MAAMd,UAAU,CAAC,SAAS,EAAEE,MAAM,EAAEC,IAAI,CAAC,CAAC;IACzD,CAAC;IACDU,QAAQ;IACRE,aAAa;IACbY,kBAAkB,EAAEC,IAAI,CAACC,IAAI,CAACd,aAAa,GAAGhB,SAAS;EAC1D,CAAC;AAEJ,CAAC;AAAAa,EAAA,CAjCKD,MAAM;AAmCZ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}